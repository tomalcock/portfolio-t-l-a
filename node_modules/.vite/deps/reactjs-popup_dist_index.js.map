{
  "version": 3,
  "sources": ["../../reactjs-popup/src/hooks.tsx", "../../reactjs-popup/src/styles.ts", "../../reactjs-popup/src/Utils.ts", "../../reactjs-popup/src/index.tsx", "../../reactjs-popup/dist/index.js"],
  "sourcesContent": ["import { useEffect, RefObject, useLayoutEffect } from 'react';\n\nexport const useOnEscape = (\n  handler: (event: KeyboardEvent) => void,\n  active = true\n) => {\n  useEffect(() => {\n    if (!active) return;\n    const listener = (event: KeyboardEvent) => {\n      // check if key is an Escape\n      if (event.key === 'Escape') handler(event);\n    };\n    document.addEventListener('keyup', listener);\n\n    return () => {\n      if (!active) return;\n      document.removeEventListener('keyup', listener);\n    };\n  }, [handler, active]);\n};\n\nexport const useRepositionOnResize = (handler: () => void, active = true) => {\n  useEffect(() => {\n    if (!active) return;\n    const listener = () => {\n      handler();\n    };\n\n    window.addEventListener('resize', listener);\n\n    return () => {\n      if (!active) return;\n      window.removeEventListener('resize', listener);\n    };\n  }, [handler, active]);\n};\n\nexport const useOnClickOutside = (\n  ref: RefObject<HTMLElement> | RefObject<HTMLElement>[],\n  handler: (event: TouchEvent | MouseEvent) => void,\n  active = true\n) => {\n  useEffect(() => {\n    if (!active) return;\n    const listener = (event: TouchEvent | MouseEvent) => {\n      // Do nothing if clicking ref's element or descendent elements\n      const refs = Array.isArray(ref) ? ref : [ref];\n\n      let contains = false;\n      refs.forEach(r => {\n        if (!r.current || r.current.contains(event.target as Node)) {\n          contains = true;\n          return;\n        }\n      });\n      event.stopPropagation();\n      if (!contains) handler(event);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      if (!active) return;\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler, active]);\n};\n\n// Make sure that user is not able TAB out of the Modal content on Open\nexport const useTabbing = (\n  contentRef: RefObject<HTMLElement>,\n  active = true\n) => {\n  useEffect(() => {\n    if (!active) return;\n    const listener = (event: KeyboardEvent) => {\n      // check if key is an Tab\n      if (event.keyCode === 9) {\n        const els = contentRef?.current?.querySelectorAll(\n          'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]'\n        );\n\n        const focusableEls = Array.prototype.slice.call(els);\n        if (focusableEls.length === 1) {\n          event.preventDefault();\n          return;\n        }\n\n        const firstFocusableEl = focusableEls[0];\n        const lastFocusableEl = focusableEls[focusableEls.length - 1];\n        if (event.shiftKey && document.activeElement === firstFocusableEl) {\n          event.preventDefault();\n          lastFocusableEl.focus();\n        } else if (document.activeElement === lastFocusableEl) {\n          event.preventDefault();\n          firstFocusableEl.focus();\n        }\n      }\n    };\n\n    document.addEventListener('keydown', listener);\n\n    return () => {\n      if (!active) return;\n      document.removeEventListener('keydown', listener);\n    };\n  }, [contentRef, active]);\n};\n\nexport const useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n", "import React from 'react';\n\ntype PopupStyle = {\n  popupContent: {\n    tooltip: React.CSSProperties;\n    modal: React.CSSProperties;\n  };\n  popupArrow: React.CSSProperties;\n  overlay: {\n    tooltip: React.CSSProperties;\n    modal: React.CSSProperties;\n  };\n};\n\nconst Style: PopupStyle = {\n  popupContent: {\n    tooltip: {\n      position: 'absolute',\n      zIndex: 999,\n    },\n    modal: {\n      position: 'relative',\n      margin: 'auto',\n    },\n  },\n  popupArrow: {\n    height: '8px',\n    width: '16px',\n    position: 'absolute',\n    background: 'transparent',\n    color: '#FFF',\n    zIndex: -1,\n  },\n  overlay: {\n    tooltip: {\n      position: 'fixed',\n      top: '0',\n      bottom: '0',\n      left: '0',\n      right: '0',\n      zIndex: 999,\n    },\n    modal: {\n      position: 'fixed',\n      top: '0',\n      bottom: '0',\n      left: '0',\n      right: '0',\n      display: 'flex',\n      zIndex: 999,\n    },\n  },\n};\n\nexport default Style;\n", "/* Algo to calculate position\n  1. center position for popup content : the center of the trigger will be the center of the content content\n      so the popup content position will be like this :\n      top => the y of the center for the trigger element : trigger.top + trigger.height/2\n      left => the x of the center for the trigger element : trigger.left + trigger.width/2\n\n  2. translate position according to the first  position attribute  passed  in the function argument\n      for example :\n        position = 'left top'\n        we need to handle the first argument in the position: 'left' => that's mean we need to translate the popup content according to the X axis by - content.width/2\n\n  3.translate position according to the first  position attribute  passed  in the function argument\n    for example :\n      position = 'left top'\n      the second argument 'top' => translate popup content by + content.height*4/5\n\n  4. check if calculated position is going out of bounds of wrapper box or not. If yes repeat 1-3 for next position enum. By default wrapper box is window element\n*/\nimport { PopupPosition } from './types';\n\nexport const POSITION_TYPES: PopupPosition[] = [\n  'top left',\n  'top center',\n  'top right',\n  'right top',\n  'right center',\n  'right bottom',\n  'bottom left',\n  'bottom center',\n  'bottom right',\n  'left top',\n  'left center',\n  'left bottom',\n  //'center center',\n];\n\ntype CordsType = {\n  top: number;\n  left: number;\n  transform: string;\n  arrowLeft: string;\n  arrowTop: string;\n};\n\nconst getCoordinatesForPosition = (\n  triggerBounding: DOMRect,\n  ContentBounding: DOMRect,\n  position: PopupPosition, //PopupPosition | PopupPosition[],\n  arrow: boolean,\n  { offsetX, offsetY }: { offsetX: number; offsetY: number }\n): CordsType => {\n  const margin = arrow ? 8 : 0;\n  const args = position.split(' ');\n  // the step N 1 : center the popup content => ok\n  const CenterTop = triggerBounding.top + triggerBounding.height / 2;\n  const CenterLeft = triggerBounding.left + triggerBounding.width / 2;\n  const { height, width } = ContentBounding;\n  let top = CenterTop - height / 2;\n  let left = CenterLeft - width / 2;\n  let transform = '';\n  let arrowTop = '0%';\n  let arrowLeft = '0%';\n  // the  step N 2 : => ok\n  switch (args[0]) {\n    case 'top':\n      top -= height / 2 + triggerBounding.height / 2 + margin;\n      transform = `rotate(180deg)  translateX(50%)`;\n      arrowTop = '100%';\n      arrowLeft = '50%';\n      break;\n    case 'bottom':\n      top += height / 2 + triggerBounding.height / 2 + margin;\n      transform = `rotate(0deg) translateY(-100%) translateX(-50%)`;\n      arrowLeft = '50%';\n      break;\n    case 'left':\n      left -= width / 2 + triggerBounding.width / 2 + margin;\n      transform = ` rotate(90deg)  translateY(50%) translateX(-25%)`;\n      arrowLeft = '100%';\n      arrowTop = '50%';\n      break;\n    case 'right':\n      left += width / 2 + triggerBounding.width / 2 + margin;\n      transform = `rotate(-90deg)  translateY(-150%) translateX(25%)`;\n      arrowTop = '50%';\n      break;\n    default:\n  }\n  switch (args[1]) {\n    case 'top':\n      top = triggerBounding.top;\n      arrowTop = `${triggerBounding.height / 2}px`;\n      break;\n    case 'bottom':\n      top = triggerBounding.top - height + triggerBounding.height;\n      arrowTop = `${height - triggerBounding.height / 2}px`;\n      break;\n    case 'left':\n      left = triggerBounding.left;\n      arrowLeft = `${triggerBounding.width / 2}px`;\n      break;\n    case 'right':\n      left = triggerBounding.left - width + triggerBounding.width;\n      arrowLeft = `${width - triggerBounding.width / 2}px`;\n      break;\n    default:\n  }\n\n  top = args[0] === 'top' ? top - offsetY : top + offsetY;\n  left = args[0] === 'left' ? left - offsetX : left + offsetX;\n\n  return { top, left, transform, arrowLeft, arrowTop };\n};\n\nexport const getTooltipBoundary = (keepTooltipInside: string | Boolean) => {\n  // add viewport\n  let boundingBox = {\n    top: 0,\n    left: 0,\n    /* eslint-disable-next-line no-undef */\n    width: window.innerWidth,\n    /* eslint-disable-next-line no-undef */\n    height: window.innerHeight,\n  };\n  if (typeof keepTooltipInside === 'string') {\n    /* eslint-disable-next-line no-undef */\n    const selector = document.querySelector(keepTooltipInside);\n    if (process.env.NODE_ENV !== 'production') {\n      if (selector === null)\n        throw new Error(\n          `${keepTooltipInside} selector does not exist : keepTooltipInside must be a valid html selector 'class' or 'Id'  or a boolean value`\n        );\n    }\n    if (selector !== null) boundingBox = selector.getBoundingClientRect();\n  }\n\n  return boundingBox;\n};\n\nconst calculatePosition = (\n  triggerBounding: DOMRect,\n  ContentBounding: DOMRect,\n  position: PopupPosition | PopupPosition[],\n  arrow: boolean,\n  { offsetX, offsetY }: { offsetX: number; offsetY: number },\n  keepTooltipInside: string | boolean\n): CordsType => {\n  let bestCoords: CordsType = {\n    arrowLeft: '0%',\n    arrowTop: '0%',\n    left: 0,\n    top: 0,\n    transform: 'rotate(135deg)',\n  };\n  let i = 0;\n  const wrapperBox = getTooltipBoundary(keepTooltipInside);\n  let positions = Array.isArray(position) ? position : [position];\n\n  // keepTooltipInside would be activated if the  keepTooltipInside exist or the position is Array\n  if (keepTooltipInside || Array.isArray(position))\n    positions = [...positions, ...POSITION_TYPES];\n\n  // add viewPort for WarpperBox\n  // wrapperBox.top = wrapperBox.top + window.scrollY;\n  // wrapperBox.left = wrapperBox.left + window.scrollX;\n\n  while (i < positions.length) {\n    bestCoords = getCoordinatesForPosition(\n      triggerBounding,\n      ContentBounding,\n      positions[i],\n      arrow,\n      { offsetX, offsetY }\n    );\n\n    const contentBox = {\n      top: bestCoords.top,\n      left: bestCoords.left,\n      width: ContentBounding.width,\n      height: ContentBounding.height,\n    };\n\n    if (\n      contentBox.top <= wrapperBox.top ||\n      contentBox.left <= wrapperBox.left ||\n      contentBox.top + contentBox.height >=\n        wrapperBox.top + wrapperBox.height ||\n      contentBox.left + contentBox.width >= wrapperBox.left + wrapperBox.width\n    ) {\n      i++;\n    } else {\n      break;\n    }\n  }\n\n  return bestCoords;\n};\n\nexport default calculatePosition;\n", "import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport { PopupProps, PopupActions } from './types';\nimport {\n  useOnEscape,\n  useRepositionOnResize,\n  useOnClickOutside,\n  useTabbing,\n  useIsomorphicLayoutEffect,\n} from './hooks';\n\nimport './index.css';\n\nimport styles from './styles';\nimport calculatePosition from './Utils';\n\nlet popupIdCounter = 0;\n\nconst getRootPopup = () => {\n  let PopupRoot = document.getElementById('popup-root');\n\n  if (PopupRoot === null) {\n    PopupRoot = document.createElement('div');\n    PopupRoot.setAttribute('id', 'popup-root');\n    document.body.appendChild(PopupRoot);\n  }\n\n  return PopupRoot;\n};\n\nexport const Popup = forwardRef<PopupActions, PopupProps>(\n  (\n    {\n      trigger = null,\n      onOpen = () => {},\n      onClose = () => {},\n      defaultOpen = false,\n      open = undefined,\n      disabled = false,\n      nested = false,\n      closeOnDocumentClick = true,\n      repositionOnResize = true,\n      closeOnEscape = true,\n      on = ['click'],\n      contentStyle = {},\n      arrowStyle = {},\n      overlayStyle = {},\n      className = '',\n      position = 'bottom center',\n      modal = false,\n      lockScroll = false,\n      arrow = true,\n      offsetX = 0,\n      offsetY = 0,\n      mouseEnterDelay = 100,\n      mouseLeaveDelay = 100,\n      keepTooltipInside = false,\n      children,\n    },\n    ref\n  ) => {\n    const [isOpen, setIsOpen] = useState<boolean>(open || defaultOpen);\n    const triggerRef = useRef<HTMLElement>(null);\n    const contentRef = useRef<HTMLElement>(null);\n    const arrowRef = useRef<HTMLDivElement>(null);\n    const focusedElBeforeOpen = useRef<Element | null>(null);\n    const popupId = useRef<string>(`popup-${++popupIdCounter}`);\n\n    const isModal = modal ? true : !trigger;\n    const timeOut = useRef<any>(0);\n\n    useIsomorphicLayoutEffect(() => {\n      if (isOpen) {\n        focusedElBeforeOpen.current = document.activeElement;\n        setPosition();\n        focusContentOnOpen(); // for accessibility\n        lockScrolll();\n      } else {\n        resetScroll();\n      }\n      return () => {\n        clearTimeout(timeOut.current);\n      };\n    }, [isOpen]);\n\n    // for uncontrolled popup we need to sync isOpen with open prop\n    useEffect(() => {\n      if (typeof open === 'boolean') {\n        if (open) openPopup();\n        else closePopup();\n      }\n    }, [open, disabled]);\n\n    const openPopup = (event?: React.SyntheticEvent) => {\n      if (isOpen || disabled) return;\n      setIsOpen(true);\n      setTimeout(() => onOpen(event), 0);\n    };\n\n    const closePopup = (\n      event?: React.SyntheticEvent | KeyboardEvent | TouchEvent | MouseEvent\n    ) => {\n      if (!isOpen || disabled) return;\n      setIsOpen(false);\n      if (isModal) (focusedElBeforeOpen.current as HTMLElement)?.focus();\n      setTimeout(() => onClose(event), 0);\n    };\n\n    const togglePopup = (event?: React.SyntheticEvent) => {\n      event?.stopPropagation();\n      if (!isOpen) openPopup(event);\n      else closePopup(event);\n    };\n\n    const onMouseEnter = (event?: React.SyntheticEvent) => {\n      clearTimeout(timeOut.current);\n      timeOut.current = setTimeout(() => openPopup(event), mouseEnterDelay);\n    };\n\n    const onContextMenu = (event?: React.SyntheticEvent) => {\n      event?.preventDefault();\n      togglePopup();\n    };\n\n    const onMouseLeave = (event?: React.SyntheticEvent) => {\n      clearTimeout(timeOut.current);\n      timeOut.current = setTimeout(() => closePopup(event), mouseLeaveDelay);\n    };\n\n    const lockScrolll = () => {\n      if (isModal && lockScroll)\n        document.getElementsByTagName('body')[0].style.overflow = 'hidden'; // migrate to document.body\n    };\n\n    const resetScroll = () => {\n      if (isModal && lockScroll)\n        document.getElementsByTagName('body')[0].style.overflow = 'auto';\n    };\n    const focusContentOnOpen = () => {\n      const focusableEls = contentRef?.current?.querySelectorAll(\n        'a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), [tabindex=\"0\"]'\n      );\n      const firstEl = Array.prototype.slice.call(focusableEls)[0];\n      firstEl?.focus();\n    };\n\n    useImperativeHandle(ref, () => ({\n      open: () => {\n        openPopup();\n      },\n      close: () => {\n        closePopup();\n      },\n      toggle: () => {\n        togglePopup();\n      },\n    }));\n\n    // set Position\n    const setPosition = () => {\n      if (isModal || !isOpen) return;\n      if (!triggerRef?.current || !triggerRef?.current || !contentRef?.current)\n        return; /// show error as one of ref is undefined\n      const trigger = triggerRef.current.getBoundingClientRect();\n      const content = contentRef.current.getBoundingClientRect();\n\n      const cords = calculatePosition(\n        trigger,\n        content,\n        position,\n        arrow,\n        {\n          offsetX,\n          offsetY,\n        },\n        keepTooltipInside\n      );\n      contentRef.current.style.top = `${cords.top + window.scrollY}px`;\n      contentRef.current.style.left = `${cords.left + window.scrollX}px`;\n      if (arrow && !!arrowRef.current) {\n        arrowRef.current.style.transform = cords.transform;\n        arrowRef.current.style.setProperty('-ms-transform', cords.transform);\n        arrowRef.current.style.setProperty(\n          '-webkit-transform',\n          cords.transform\n        );\n        arrowRef.current.style.top =\n          arrowStyle.top?.toString() || cords.arrowTop;\n        arrowRef.current.style.left =\n          arrowStyle.left?.toString() || cords.arrowLeft;\n      }\n    };\n    // hooks\n    useOnEscape(closePopup, closeOnEscape); // can be optimized if we disabled for hover\n    useTabbing(contentRef, isOpen && isModal);\n    useRepositionOnResize(setPosition, repositionOnResize);\n    useOnClickOutside(\n      !!trigger ? [contentRef, triggerRef] : [contentRef],\n      closePopup,\n      closeOnDocumentClick && !nested\n    ); // we need to add a ne\n    // render the trigger element and add events\n    const renderTrigger = () => {\n      const triggerProps: any = {\n        key: 'T',\n        ref: triggerRef,\n        'aria-describedby': popupId.current,\n      };\n      const onAsArray = Array.isArray(on) ? on : [on];\n      for (let i = 0, len = onAsArray.length; i < len; i++) {\n        switch (onAsArray[i]) {\n          case 'click':\n            triggerProps.onClick = togglePopup;\n            break;\n          case 'right-click':\n            triggerProps.onContextMenu = onContextMenu;\n            break;\n          case 'hover':\n            triggerProps.onMouseEnter = onMouseEnter;\n            triggerProps.onMouseLeave = onMouseLeave;\n            break;\n          case 'focus':\n            triggerProps.onFocus = onMouseEnter;\n            triggerProps.onBlur = onMouseLeave;\n            break;\n          default:\n        }\n      }\n\n      if (typeof trigger === 'function') {\n        const comp = trigger(isOpen);\n        return !!trigger && React.cloneElement(comp, triggerProps);\n      }\n\n      return !!trigger && React.cloneElement(trigger, triggerProps);\n    };\n\n    const addWarperAction = () => {\n      const popupContentStyle = isModal\n        ? styles.popupContent.modal\n        : styles.popupContent.tooltip;\n\n      const childrenElementProps: any = {\n        className: `popup-content ${\n          className !== ''\n            ? className\n                .split(' ')\n                .map(c => `${c}-content`)\n                .join(' ')\n            : ''\n        }`,\n        style: {\n          ...popupContentStyle,\n          ...contentStyle,\n          pointerEvents: 'auto', //closeOnDocumentClick && nested ? 'auto' : 'none',\n        },\n        ref: contentRef,\n        onClick: (e: any) => {\n          e.stopPropagation();\n        },\n      };\n      if (!modal && on.indexOf('hover') >= 0) {\n        childrenElementProps.onMouseEnter = onMouseEnter;\n        childrenElementProps.onMouseLeave = onMouseLeave;\n      }\n      return childrenElementProps;\n    };\n\n    const renderContent = () => {\n      return (\n        <div\n          {...addWarperAction()}\n          key=\"C\"\n          role={isModal ? 'dialog' : 'tooltip'}\n          id={popupId.current}\n        >\n          {arrow && !isModal && (\n            <div ref={arrowRef} style={styles.popupArrow}>\n              <svg\n                data-testid=\"arrow\"\n                className={`popup-arrow ${\n                  className !== ''\n                    ? className\n                        .split(' ')\n                        .map(c => `${c}-arrow`)\n                        .join(' ')\n                    : ''\n                }`}\n                viewBox=\"0 0 32 16\"\n                style={{\n                  position: 'absolute',\n                  ...arrowStyle,\n                }}\n              >\n                <path d=\"M16 0l16 16H0z\" fill=\"currentcolor\" />\n              </svg>\n            </div>\n          )}\n          {children && typeof children === 'function'\n            ? children(closePopup, isOpen)\n            : children}\n        </div>\n      );\n    };\n\n    const overlay = !(on.indexOf('hover') >= 0);\n    const ovStyle = isModal ? styles.overlay.modal : styles.overlay.tooltip;\n\n    const content = [\n      overlay && (\n        <div\n          key=\"O\"\n          data-testid=\"overlay\"\n          data-popup={isModal ? 'modal' : 'tooltip'}\n          className={`popup-overlay ${\n            className !== ''\n              ? className\n                  .split(' ')\n                  .map(c => `${c}-overlay`)\n                  .join(' ')\n              : ''\n          }`}\n          style={{\n            ...ovStyle,\n            ...overlayStyle,\n            pointerEvents:\n              (closeOnDocumentClick && nested) || isModal ? 'auto' : 'none',\n          }}\n          onClick={closeOnDocumentClick && nested ? closePopup : undefined}\n          tabIndex={-1}\n        >\n          {isModal && renderContent()}\n        </div>\n      ),\n\n      !isModal && renderContent(),\n    ];\n\n    return (\n      <>\n        {renderTrigger()}\n        {isOpen && ReactDOM.createPortal(content, getRootPopup())}\n      </>\n    );\n  }\n);\n\nexport default Popup;\n", "\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./reactjs-popup.cjs.production.min.js')\n} else {\n  module.exports = require('./reactjs-popup.cjs.development.js')\n}\n"],
  "mappings": "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",
  "names": ["useOnEscape", "handler", "active", "useEffect", "listener", "event", "key", "document", "addEventListener", "removeEventListener", "useRepositionOnResize", "window", "useOnClickOutside", "ref", "refs", "Array", "isArray", "contains", "forEach", "r", "current", "target", "stopPropagation", "useTabbing", "contentRef", "keyCode", "els", "querySelectorAll", "focusableEls", "prototype", "slice", "call", "length", "preventDefault", "firstFocusableEl", "lastFocusableEl", "shiftKey", "activeElement", "focus", "useIsomorphicLayoutEffect", "useLayoutEffect", "Style", "popupContent", "tooltip", "position", "zIndex", "modal", "margin", "popupArrow", "height", "width", "background", "color", "overlay", "top", "bottom", "left", "right", "display", "POSITION_TYPES", "getCoordinatesForPosition", "triggerBounding", "ContentBounding", "arrow", "offsetX", "offsetY", "args", "split", "CenterTop", "CenterLeft", "transform", "arrowTop", "arrowLeft", "getTooltipBoundary", "keepTooltipInside", "boundingBox", "innerWidth", "innerHeight", "selector", "querySelector", "Error", "getBoundingClientRect", "calculatePosition", "bestCoords", "i", "wrapperBox", "positions", "contentBox", "popupIdCounter", "getRootPopup", "PopupRoot", "getElementById", "createElement", "setAttribute", "body", "appendChild", "Popup", "forwardRef", "trigger", "onOpen", "onClose", "defaultOpen", "open", "undefined", "disabled", "nested", "closeOnDocumentClick", "repositionOnResize", "closeOnEscape", "on", "contentStyle", "arrowStyle", "overlayStyle", "className", "lockScroll", "mouseEnterDelay", "mouseLeaveDelay", "children", "useState", "isOpen", "setIsOpen", "triggerRef", "useRef", "arrowRef", "focusedElBeforeOpen", "popupId", "isModal", "timeOut", "setPosition", "focusContentOnOpen", "lockScrolll", "resetScroll", "clearTimeout", "openPopup", "closePopup", "setTimeout", "togglePopup", "onMouseEnter", "onContextMenu", "onMouseLeave", "getElementsByTagName", "style", "overflow", "firstEl", "useImperativeHandle", "close", "toggle", "content", "cords", "scrollY", "scrollX", "setProperty", "toString", "renderTrigger", "triggerProps", "onAsArray", "len", "onClick", "onFocus", "onBlur", "comp", "React", "cloneElement", "addWarperAction", "popupContentStyle", "styles", "childrenElementProps", "map", "c", "join", "pointerEvents", "e", "indexOf", "renderContent", "role", "id", "viewBox", "d", "fill", "ovStyle", "tabIndex", "ReactDOM", "createPortal"]
}
